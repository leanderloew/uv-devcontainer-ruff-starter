# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
]

# Same as Black.
line-length = 120
indent-width = 4

# Target Python version
target-version = "py313"

[lint]
# Enable all rules by default
select = [
    # existing rules
    "E",   # pycodestyle
    "F",   # Pyflakes
    "UP",  # pyupgrade
    "B",   # flake8-bugbear
    "SIM", # flake8-simplify
    "I",   # isort
    "ANN", # annotations
    "DTZ",
    "TCH", # type-checking
    "PYI", # typing stubs
]

ignore = [
    "E114",    # Indentation is not a multiple of 4 (comment)
    "E117",    # Over-indented
    "ISC001",  # Single line implicit string concatenation
    "ISC002",  # Implicit string concatenation in listd
    "N999",    # Invalid module name
    "F722",    # Forward annotation syntax error
    "PLR0133", # Allow function calls in argument defaults
    "E741",    # Allow ambiguous variable names (l, I, O)
    "D213",    # Allow multi-line docstring first line on separate line
    "PD901",   # Allow 'df' as a variable name for DataFrames
    "D205",    # Allow no blank line between docstring summary and description
    "D212",
    "PD003",   # Allow df.values instead of df.to_numpy()
    "S101",    # Allow assert statements
    "ANN002",  # Allow *args without type annotation
    "ANN003",  # Allow **kwargs without type annotation
    "B008",    # Allow function calls in argument defaults (FastAPI specific)
    "TRY003",  # Allow long messages in exceptions
    "EM102",   # Allow f-strings in exceptions
    "EM101",   # Allow string literals in exceptions
    "ICN001",  # `import-conventions` - Import should follow convention of importing `pyarrow` as `pa`
    "PLR0911", # Too many return statements
    "ANN101",  # Missing type annotation for self
    "ANN102",  # Missing type annotation for cls
    "ANN204",  # Missing return type annotation for special method
    "ANN401",  # Dynamically typed expressions (Any) are disallowed
    "TCH001",  # Move application import into a type-checking block
    "TCH002",  # Move third-party import into a type-checking block
    "TCH003",  # Move standard library import into a type-checking block
    "E731",    # Do not assign a lambda expression, use a def
]

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

[format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

[per-file-ignores]
# Ignore specific rules for tests
"tests/**" = ["INP001", "S101"]
# Ignore specific rules for notebooks
"*.ipynb" = ["E402", "F401", "F403", "F405", "I001"]
